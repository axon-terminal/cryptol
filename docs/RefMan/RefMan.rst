.. Cryptol Reference Manual documentation master file, created by
   sphinx-quickstart on Thu Apr 29 15:31:18 2021.
   You can adapt this file completely to your liking, but it should at least
   contain the root `toctree` directive.

Welcome to Cryptol Reference Manual's documentation!
====================================================

.. toctree::
   :maxdepth: 2
   :caption: Contents:

Basic Syntax
============


Layout
------

Groups of declarations are organized based on indentation.
Declarations with the same indentation belong to the same group.
Lines of text that are indented more than the beginning of a
declaration belong to that declaration, while lines of text that are
indented less terminate a group of declarations.  Consider, for example,
the following Cryptol declarations:

.. code-block:: cryptol

  f x = x + y + z
    where
    y = x * x
    z = x + y

  g y = y

This group has two declarations, one for `f` and one for `g`.  All the
lines between `f` and `g` that are indented more than `f` belong to
`f`.  The same principle applies to the declarations in the ``where`` block
of `f`, which defines two more local names, `y` and `z`.



Comments
--------

Cryptol supports block comments, which start with ``/*`` and end with
``*/``, and line comments, which start with ``//`` and terminate at the
end of the line.  Block comments may be nested arbitrarily.

.. code-block:: cryptol

  /* This is a block comment */
  // This is a line comment
  /* This is a /* Nested */ block comment */

.. todo::
  Document ``/** */``


Identifiers
-----------

Cryptol identifiers consist of one or more characters.  The first
character must be either an English letter or underscore (``_``).  The
following characters may be an English letter, a decimal digit,
underscore (``_``), or a prime (``'``).  Some identifiers have special
meaning in the language, so they may not be used in programmer-defined
names (see [Keywords](#keywords-and-built-in-operators)).

.. code-block:: cryptol

    name    name1    name'    longer_name
    Name    Name2    Name''   longerName



Keywords and Built-in Operators
-------------------------------

The following identifiers have special meanings in Cryptol, and may
not be used for programmer defined names:

.. The table below can be generated by running `chop.hs` on this list:
  else
  extern
  if
  private
  include
  module
  newtype
  pragma
  property
  then
  type
  where
  let
  import
  as
  hiding
  infixl
  infixr
  infix
  primitive
  parameter
  constraint

.. code-block:: cryptol

        else       include    property    let       infixl       parameter
        extern     module     then        import    infixr       constraint
        if         newtype    type        as        infix
        private    pragma     where       hiding    primitive


The following table contains Cryptol's operators and their
associativity with lowest precedence operators first, and highest
precedence last.

Operator                                   Associativity
-----------------------------------------  -------------
  `==>`                                    right
  `\/`                                     right
  `/\`                                     right
  `==` `!=` `===` `!==`                    not associative
  `>` `<` `<=` `>=` `<$` `>$` `<=$` `>=$`  not associative
  `||`                                     right
  `^`                                      left
  `&&`                                     right
  `#`                                      right
  `>>` `<<` `>>>` `<<<` `>>$`              left
  `+` `-`                                  left
  `*` `/` `%` `/$` `%$`                    left
  `^^`                                     right
  `@`  `@@`  `!` `!!`                      left
  (unary) `-` `~`                          right

Table: Operator precedences.


